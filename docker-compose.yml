version: '3.7'
services:
  auth:
    container_name: ms-auth
    build:
      context: ./ms-auth
      dockerfile: Dockerfile
    networks:
      - app_net
    depends_on:
      - mq
      - db
      - gateway
      - discovery
    environment:
      - 1=1
    logging:
      options:
        max-size: 50m

  user:
    container_name: ms-user
    build:
      context: ./ms-user
      dockerfile: Dockerfile
    networks:
      - app_net
    depends_on:
      - mq
      - db
      - gateway
      - discovery
    environment:
      - 1=1
    logging:
      options:
        max-size: 50m

  email:
    container_name: ms-email
    build:
      context: ./ms-email
      dockerfile: Dockerfile
    networks:
      - app_net
    depends_on:
      - mq
      - db
      - gateway
      - discovery
    environment:
      - 1=1
    logging:
      options:
        max-size: 50m

  mq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    logging:
      options:
        max-size: 50m

  db:
    container_name: mysql
    image: mysql
    environment:
      - MYSQL_PASSWORD=1234
    logging:
      options:
        max-size: 50m

  gateway:
    container_name: ms-gateway
    build:
      context: ./ms-gateway
      dockerfile: Dockerfile
    networks:
      - app_net
    depends_on:
      - discovery
    environment:
      - 1=1
    ports:
      - "8080:8080"
    logging:
      options:
        max-size: 50m

  discovery:
    container_name: ms-discovery
    build:
      context: ./ms-discovery
      dockerfile: Dockerfile
    networks:
      - app_net
    environment:
      - 1=1
    logging:
      options:
        max-size: 50m

  stop:
    container_name: ms-stop
    build:
      context: ./ms-stop
      dockerfile: Dockerfile
    networks:
      - app_net
    depends_on:
      - mq
      - db
      - gateway
      - discovery
    environment:
      - 1=1
    logging:
      options:
        max-size: 50m

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prom/prometheus
    networks:
      - app_net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "7000:3000"
    networks:
      - app_net
        
networks:
  app_net:
    driver: bridge

volumes:
  prometheus_data: